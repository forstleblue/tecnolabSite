# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-09-12 09:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import filer.fields.folder
import image_cropping.fields
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('filer', '0004_auto_20160328_1434'),
        ('sito', '0009_showroom_link'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=100)),
                ('sottotitolo', models.CharField(blank=True, max_length=250, null=True)),
                ('azienda', models.CharField(blank=True, max_length=250, null=True, verbose_name='Azienda')),
                ('link', models.CharField(blank=True, max_length=250, null=True)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('body', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('image', models.ImageField(blank=True, null=True, upload_to='fiere')),
                ('cropping', image_cropping.fields.ImageRatioField('image', '500x281', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='500x281')),
                ('slidepage', image_cropping.fields.ImageRatioField('image', '870x480', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='870x480')),
                ('croppingthumb', image_cropping.fields.ImageRatioField('image', '595x335', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='595x335')),
                ('croppingslide', image_cropping.fields.ImageRatioField('image', '1140x487', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='1140x487')),
                ('croppingcarousel', image_cropping.fields.ImageRatioField('image', '198x132', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='198x132')),
                ('croppingrender', image_cropping.fields.ImageRatioField('image', '1199x674', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='1199x674')),
                ('designthumb', image_cropping.fields.ImageRatioField('image', '500x469', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='Design Miniatura')),
                ('designbig', image_cropping.fields.ImageRatioField('image', '1200x800', adapt_rotation=False, allow_fullsize=False, free_crop=True, help_text=None, hide_image_field=False, size_warning=True, verbose_name='Design HD')),
                ('designnews', image_cropping.fields.ImageRatioField('image', '1200x1125', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='News')),
                ('planimetria', models.ImageField(blank=True, null=True, upload_to='planimetria')),
                ('planimetria_crop', image_cropping.fields.ImageRatioField('planimetria', '1200x800', adapt_rotation=False, allow_fullsize=False, free_crop=True, help_text=None, hide_image_field=False, size_warning=True, verbose_name='Design HD')),
                ('attiva_slider', models.BooleanField(default=False, verbose_name='attiva in slider')),
                ('active', models.BooleanField(default=False, verbose_name='attiva')),
                ('album', filer.fields.folder.FilerFolderField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.Folder')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Parole chiave')),
            ],
            options={
                'verbose_name_plural': 'Case History',
            },
        ),
    ]
